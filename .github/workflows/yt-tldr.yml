name: Build YouTube TLDRs
on:
  schedule:
    # Run twice nightly (UTC) to catch late uploads
    - cron: "0 2 * * *"
    - cron: "0 3 * * *"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # (Optional) Whisper fallback â€“ retain if you want offline STT when captions truly don't exist
      - name: Install ffmpeg and yt-dlp
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg python3-pip
          python3 -m pip install --upgrade --no-cache-dir yt-dlp

      - name: Download whisper.cpp binary and model
        run: |
          mkdir -p tools/bin models
          curl -L -o tools/bin/whisper-cpp https://github.com/ggerganov/whisper.cpp/releases/latest/download/whisper-linux-x64
          chmod +x tools/bin/whisper-cpp
          curl -L -o models/ggml-base.en.bin https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-base.en.bin

      - name: Install Node deps
        run: |
          npm i openai@4 youtube-transcript googleapis

      # Quick sanity ping so we fail early if the API key is missing/invalid
      - name: Sanity check YouTube key
        env:
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
        run: |
          curl -s "https://www.googleapis.com/youtube/v3/search?part=snippet&type=channel&q=@GoogleDevelopers&key=${YT_API_KEY}" | head -c 500 || true

      - name: Run builder
        env:
          # --- Summarizer (omit OPENAI_API_KEY if you prefer FREE_MODE=1) ---
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          FREE_MODE: "0"                         # set to "1" to use rule-based, $0 summaries

          # --- Channel (either HANDLE or CHANNEL_ID is fine) ---
          CHANNEL_HANDLE: "@Syn.Trades"
          CHANNEL_ID: "UCZYoGap4Hbtzfpz0V3HtkYg"

          # --- YouTube Data API (REQUIRED for playlists & shorts search) ---
          YT_API_KEY: ${{ secrets.YT_API_KEY }}

          # --- Site/config ---
          SITE_URL: "https://JoyBoy92Codes.github.io/syndotcwebsite/"
          SITE_TZ: "America/Los_Angeles"

          # Fallback only: used if playlists fail and we revert to "recent videos"
          MAX_ITEMS: "10"

          # Playlists/Shorts caps (raise if you want more)
          MAX_PER_PLAYLIST: "100"
          INCLUDE_SHORTS: "1"
          SHORTS_MAX: "100"

          # Optional sanity filter for price-like levels inside summaries
          ALLOW_PRICE_LOOKUPS: "0"

          # --- OAuth for official captions (recommended for reliability) ---
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}

          # --- Whisper fallback wiring (optional) ---
          YTDLP_BIN: "yt-dlp"
          WHISPER_BIN: "tools/bin/whisper-cpp"
          WHISPER_MODEL: "models/ggml-base.en.bin"
        run: node tools/build-yt-tldr.mjs

      - name: Commit & push
        run: |
          git config user.name "yt-bot"
          git config user.email "yt-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore: refresh TLDRs (latest.json, yt-index.json, summaries/)" || echo "No changes"
          git push
